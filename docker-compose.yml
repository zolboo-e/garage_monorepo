version: "3"

services:
  database:
    container_name: database
    image: postgres:latest
    restart: always
    ports:
      - 5432:5432
    networks:
      - app_network
    env_file: .env
    healthcheck:
      test: pg_isready -U postgres -d garage-monorepo || exit 1
      interval: 5s
      timeout: 5s
      retries: 3

  prisma-migrate:
    container_name: prisma-migrate
    build:
      context: .
      dockerfile: ./src/packages/database/Dockerfile
      args:
        DATABASE_URL: "${DATABASE_URL}"
    networks:
      - app_network
    depends_on:
      database:
        condition: service_healthy
    env_file: .env

  api:
    container_name: api
    build:
      context: .
      dockerfile: ./src/apps/backend/api/Dockerfile
      args:
        DATABASE_URL: "${DATABASE_URL}"
    restart: always
    ports:
      - 3001:3001
    networks:
      - app_network
    depends_on:
      prisma-migrate:
        condition: service_completed_successfully
    env_file: .env
    healthcheck:
      test: curl -f localhost:3001/health || exit 1
      interval: 5s
      timeout: 5s
      retries: 3

  mechanic:
    container_name: mechanic
    build: 
      context: .
      dockerfile: ./src/apps/frontend/mechanic/Dockerfile
      args:
        DATABASE_URL: "${DATABASE_URL}"
    restart: always
    ports: 
      - 3000:3000
    networks: 
      - app_network
    depends_on: 
      api:
        condition: service_healthy
    env_file: .env
    healthcheck:
      test: curl -f localhost:3000/api/health || exit 1
      interval: 5s
      timeout: 5s
      retries: 3

  # Define a network, which allows containers to communicate
  # with each other, by using their container name as a hostname
networks:
  app_network:
    external: true
